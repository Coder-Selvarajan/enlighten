<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Enlightening Notes</title>
    <link>https://coder-selvarajan.github.io/enlighten/</link>
    <description>Recent content on Enlightening Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://coder-selvarajan.github.io/enlighten/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/bigdata/hadoop-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/bigdata/hadoop-intro/</guid>
      <description>Understanding Hadoop Hadoop - is a set of technologies.. used to store and process huge amounts of data..
Hadoop is not a database.. its an alternative file system with a processing library..
Libraries: MapReduce 1&amp;amp;2, Hive, Pig
RDBMS Limits: - Scalability - Speed - Queryability, sophisticated processing
Database Choices: - File systems -HDFS (Hadoop distributed file system)
 Databases -NoSQL(key/value, columnstore, doc db(mongo db), etc)
 RDBMS (MySql, Sql Server, Oracle)   When implementing Hadoop then Hadoop is an addition to your RDBMS.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/async-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/async-programming/</guid>
      <description>Async Programming XHR - XmlHttpRequest
Other api methods:
- Fetch api - Axios - Superagent - Jquery - Node http   Ajax - Xhr
 XHR Code: document.getElementById(&amp;#39;button&amp;#39;).addEventListener(&amp;#39;click&amp;#39;, loadData); function loadData() { // Create an XHR Object  const xhr = new XMLHttpRequest(); // OPEN  xhr.open(&amp;#39;GET&amp;#39;, &amp;#39;data.txt&amp;#39;, true); // console.log(&amp;#39;READYSTATE&amp;#39;, xhr.readyState);  // Optional - Used for spinners/loaders  xhr.onprogress = function(){ console.log(&amp;#39;READYSTATE&amp;#39;, xhr.readyState); } xhr.onload = function(){ console.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/basics/</guid>
      <description>Basics Install Visual Studio Code and add following extentions
 Brackets pair Live server ES6 Code snippets  To find the time it took to execute the scripts:
console.time(&amp;#39;Hello&amp;#39;) console.log(&amp;#39;hello world&amp;#39;) console.log(&amp;#39;hello world&amp;#39;) console.log(&amp;#39;hello world&amp;#39;) console.log(&amp;#39;hello world&amp;#39;) console.timeEnd(&amp;#39;Hello&amp;#39;) RESULT: ==&amp;gt; Hello: 0.05898324 sec  Declaration: Var, Let, Const  Var : variable declaration Let : Similar to Var Const: cannot reassign, but object&amp;rsquo;s property can be changed.  const msg = &amp;#34;Hello world&amp;#34;; Msg = &amp;#34;Welcome&amp;#34;; // not accepted 	const person = { name: &amp;#34;ABC&amp;#34;, age: 30 }; Person.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/chrome-extn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/chrome-extn/</guid>
      <description>Built a Chrome Extension using Javascript Storage mechanism in chrome:
 chrome.storage.local - uses localstorage chrome.storage.sync - uses localstorage as well as sync data in other chrome browser.  Create png images with below dimentions :
 19 X 19 128 X 128 150 X 150  Create a manifest.json file
{ &amp;#34;manifest_version&amp;#34;: 2, &amp;#34;name&amp;#34;: &amp;#34;Techie Tab&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Dashboard tab for Techies&amp;#34;, &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;, &amp;#34;icons&amp;#34;: { &amp;#34;128&amp;#34;: &amp;#34;icon_128.png&amp;#34; }, &amp;#34;browser_action&amp;#34;: { &amp;#34;default_icon&amp;#34;: &amp;#34;icon.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/dom-object-selectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/dom-object-selectors/</guid>
      <description>DOM Objects &amp;amp; Selectors Document object - basic things: let val; val = document.all[2]; //prints: &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt;  val = document.all.length; //prints: 43  val = document.head; val = document.body; val = document.doctype; val = document.domain; val = document.URL; val = document.characterSet; val = document.contentType; val = document.forms; val = document.forms[0]; val = document.forms[0].id; val = document.links; val = document.links[0]; val = document.images; val = document.scripts; val = document.scripts[0].getAttribute(&amp;#39;src&amp;#39;); // loop thru document elements - sample  let scripts = document.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/events/</guid>
      <description>Events: Event Listeners: document.querySelector(&amp;#39;.clear-tasks&amp;#39;).addEventListener(&amp;#39;click&amp;#39;, onClick); function onClick(e){ //console.log(&amp;#39;Clicked&amp;#39;);  let val; val = e; // Event target element  val = e.target; val = e.target.id; val = e.target.className; val = e.target.classList; // Event type  val = e.type; // Timestamp  val = e.timeStamp; // Coords event relative to the window  val = e.clientY; val = e.clientX; // Coords event relative to the element  val = e.offsetY; val = e.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/frameworks-converters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/frameworks-converters/</guid>
      <description> Frameworks &amp;amp; Converters ES6 to ES5 converter:  Convert es6 into es5 using Babel: https://medium.com/@SunnyB/how-to-convert-es6-into-es5-using-babel-1b533d31a169 https://www.jonathan-petitcolas.com/2015/03/09/transpiling-es6-to-es5-using-babel.html  Babel JS Home Page: https://babeljs.io/  ES6Console: https://es6console.com/   Date related functionalities with moment.js: https://momentjs.com/ 
Useful functionalities in javascript with underscorejs: https://underscorejs.org/ 
JS framework Backbone.js http://backbonejs.org/  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/functions/</guid>
      <description>Functions Function expressions const square = function(x) { return x * x; }; const square = function(x = 4) { return x * x; }; console.log(square(11)); // Result: 121  Immediately invokable function expressions (function(name) { Console.log(&amp;#34;Hello &amp;#34; + name); })(&amp;#34;Brad&amp;#34;); // Result: Hello Brad  Property methods const todo = { add: function(){ console.log(&amp;#39;Adding todo…&amp;#39;); } edit: function(id){ console.log(&amp;#39;Editing - &amp;#39; + id); } } todo.delete = function(){ console.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/localstorage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/localstorage/</guid>
      <description>LocalStorage // set local storage item  localStorage.setItem(&amp;#39;name&amp;#39;, &amp;#39;John&amp;#39;); localStorage.setItem(&amp;#39;age&amp;#39;, &amp;#39;30&amp;#39;); // set session storage item  sessionStorage.setItem(&amp;#39;name&amp;#39;, &amp;#39;Beth&amp;#39;); // remove from storage  localStorage.removeItem(&amp;#39;name&amp;#39;); // get from storage  const name = localStorage.getItem(&amp;#39;name&amp;#39;); const age = localStorage.getItem(&amp;#39;age&amp;#39;); // clear local storage  localStorage.clear(); console.log(name, age); document.querySelector(&amp;#39;form&amp;#39;).addEventListener(&amp;#39;submit&amp;#39;, function(e){ const task = document.getElementById(&amp;#39;task&amp;#39;).value; let tasks; if(localStorage.getItem(&amp;#39;tasks&amp;#39;) === null) { tasks = []; } else { tasks = JSON.parse(localStorage.getItem(&amp;#39;tasks&amp;#39;)); } tasks.push(task); localStorage.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/object-oriented/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/object-oriented/</guid>
      <description>Object oriented features Constructors.. &amp;lsquo;this&amp;rsquo; keyword // Person constructor  function Person(name, dob) { this.name = name; // this.age = age;  this.birthday = new Date(dob); this.calculateAge = function(){ const diff = Date.now() - this.birthday.getTime(); const ageDate = new Date(diff); return Math.abs(ageDate.getUTCFullYear() - 1970); } } // const brad = new Person(&amp;#39;Brad&amp;#39;, 36);  // const john = new Person(&amp;#39;John&amp;#39;, 30);  // console.log(john.age);  const brad = new Person(&amp;#39;Brad&amp;#39;, &amp;#39;9-10-1981&amp;#39;); console.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/rest-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/rest-api/</guid>
      <description>REST Api API - Application Programming Interface - Contract provided by one piece of software to another - Structured request and response  REST API - Representational State Transfer - Architecture style for designing networked apps - Relies on stateless, client server protocol, always http - Treats server objects as resources that can be created and destroyed  HTTP Requests/Verbs GET - Get resources POST - Post resources PUT - Update resources DELETE - Delete resources HEAD - Same as GET but does not return body OPTIONS - Returns the supported HTTP methods PATCH - Update partial resources  API Endpoints GET - /api/users GET - /api/users/1 POST - /api/users PUT - /api/users/1 DELETE - /api/users/1  FAKE online Rest Api for developers: https://jsonplaceholder.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/window-object/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/window-object/</guid>
      <description>Window object In console type window.
window.console.log(&amp;#34;Hello&amp;#34;) window.alert(&amp;#34;Hello World&amp;#34;); // prompt  const input = prompt(); alert(input); //confirm  If (confirm(&amp;#34;Are you sure?&amp;#34;)){ alert(&amp;#34;proceed&amp;#34;); } //window height  alert(window.outerHeight); alert(window.outerWidth); //visible content area.. If firebug is open then the value change here..  alert(window.innerHeight); alert(window.innerWidth); //scroll point  window.scrollY; window.scrollX;  Localtion Object val = window.location console.log(val); //prints info related to http host info, protocol,  //query string, redirection etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/linux/linux-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/linux/linux-commands/</guid>
      <description>Linux Commands 1 - SYSTEM INFORMATION    Command Notes     uname -a Display Linux system information   uname -r Display kernel release information   cat /etc/redhat-release Show which version of redhat installed   uptime Show how long the system has been running + load   hostname Show system host name   hostname -I Display the IP addresses of the host   last reboot Show system reboot history   date Show the current date and time   cal Show this month&amp;rsquo;s calendar   w Display who is online   whoami Who you are logged in as    2 - HARDWARE INFORMATION    Command Notes     dmesg Display messages in kernel ring buffer   cat /proc/cpuinfo Display CPU information   cat /proc/meminfo Display memory information   free -h Display free and used memory ( -h for human readable, -m for MB, -g for GB.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/linux/linux-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/linux/linux-intro/</guid>
      <description>Linux Intro Linux Distributions Some of the key facts about the Fedora distribution family are:
 The Fedora family is upstream for CentOS, RHEL, and Oracle Linux. Kernel version 3.10 is used in RHEL/CentOS 7. It supports hardware platforms such as x86, x86-64, Itanium, PowerPC, and IBM System z. It uses the RPM-based yum package manager (we cover it in more detail later) to install, update, and remove packages in the system.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/mean_stack/nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/mean_stack/nodejs/</guid>
      <description>Node JS Install NodeJS in CentOS
curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash - sudo yum -y install nodejs  From https://nodejs.org/en/download/package-manager/#enterprise-linux-and-fedora
Install pm2 &amp;amp; http-server:
npm install -g -pm2 http-server OR npm install pm2@latest -g  Install Yarn:
curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo sudo yum install yarn  From https://yarnpkg.com/en/docs/install#centos-stable
**NodeJs Setup on Centos - Tut Video: **
- https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/deployment - [Deploying Node.js App With PM2](https://www.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/misc/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/misc/git/</guid>
      <description> Git Explained Overview Git Commands </description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/misc/hugo-tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/misc/hugo-tips/</guid>
      <description>Hugo Syntax/Tips Emoji Emojis can be enabled in hugo by adding below property in configuration file.
enableEmoji = &amp;quot;true&amp;quot;  Emoji Cheat-sheat: https://www.webpagefx.com/tools/emoji-cheat-sheet/
SYNTAX: remove space after first :
I : heart: Hugo!  RESULT:
I ❤️ Hugo!
Task List SYNTAX:
1. [ ] a task list item 2. [x] list syntax required 3. [ ] incomplete 4. [x] completed  RESULT:
a task list item list syntax required incomplete completed  Footnote SYNTAX:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/misc/markdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/misc/markdown/</guid>
      <description>Markdown: Syntax Images SYNTAX:
![Hugo](../../../images/hugo-small.png &amp;quot;Hugo&amp;quot;)  RESULT:
Table SYNTAX:
| Name | Age | | ----- | --- | | Bob | 27 | | xyz | | Alice | 23 | | abcd |  RESULT:
   Name Age     Bob 27   xyz    Alice 23   abcd     
Notes from John Gruber (creator of Markdown)  Overview  Philosophy Inline HTML Automatic Escaping for Special Characters  Block Elements  Paragraphs and Line Breaks Headers Blockquotes Lists Code Blocks Horizontal Rules  Span Elements  Links Emphasis Code Images  Miscellaneous  Backslash Escapes Automatic Links   Note: This document is itself written using Markdown; you can see the source for it by adding &amp;lsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/python/setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/python/setup/</guid>
      <description>Notes from &amp;lsquo;Programming with Mosh&amp;rsquo; &amp;amp; &amp;lsquo;Code Dojo&amp;rsquo; youtube channel
Python Setup  Install Python 3.7 from https://www.python.org/ VS-Code Setup  Install Python extention from Microsoft Install PyLint extention for Syntax highlighting Install Formatter - Pep8Style to format python code according to PEP8 standards Install &amp;lsquo;Code Runner&amp;rsquo; extension    With VS Code we can setup to format the page while we save the file, with preference menu.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/resources/my-projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/resources/my-projects/</guid>
      <description>My Projects, Apps &amp;amp; Sites 
1. TO-DO List App - Tasky Handy to-do list app built with core javascript and materialize-css.  Visit app page: https://github.com/Coder-Selvarajan/tasky
2. My Wiki Site - Enlighten I have compiled all my notes during my technical learning and have build a documentation site out of it with Hugo.  Visit site repo: https://github.com/Coder-Selvarajan/enlighten</description>
    </item>
    
    <item>
      <title>AsciiDoc Overview</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/misc/asciidoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/misc/asciidoc/</guid>
      <description>AsciiDoc AsciiDoctor is a fast text processor and publishing tool for converting AsciiDoc to Html5
 This processor is built in Ruby.
 There is asciidoc processor available for Javascript as well. https://github.com/asciidoctor/asciidoctor.js
 Asciidoc Setup   Install ruby from the below link.
  https://rubyinstaller.org/downloads/
     Install asciidoc via ruby-gem
     The Big Picture Asciidoctor reads content written in plain text, as shown in the panel on the left in the image below, and converts it to HTML5, as shown rendered in the right panel.</description>
    </item>
    
    <item>
      <title>Datastructures - Swift</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/swift/data-structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/swift/data-structures/</guid>
      <description>Data Structures Arrays The syntax of array looks like this
 var someArray = [SomeType](count: nElements, repeatedValue: InitValue)  You can use the following statement to create an empty array of Int type having 3 elements and the initial value as zero var someInts = [Int](count: 3, repeatedValue: 0)
 Following is one more example to create an array of three elements and assign three values to that array var someInts:[Int] = [10, 20, 30]</description>
    </item>
    
    <item>
      <title>Developer Roadmap</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/misc/dev-tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/misc/dev-tips/</guid>
      <description>Developer Roadmap Roadmap to become a web developer in 2019.
 Note: Below diagrams are copied from :
https://github.com/kamranahmedse/developer-roadmap
 Introduction 
   Frondend Roadmap 
   Backend Roadmap 
   Devops Roadmap 
   </description>
    </item>
    
    <item>
      <title>Docker Overview</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/misc/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/misc/docker/</guid>
      <description>Docker Overview Docker is a platform to develop, deploy, and run applications inside containers. Docker is essentially synonymous with containerization. If you’re a current or aspiring software developer or data scientist, Docker is in your future.
  Other Tutorial links here  https://docker-curriculum.com/#introduction
https://www.tutorialspoint.com/docker/
   Container Like a physical plastic container, a Docker container:
   Holds things — Something is either inside the container or outside the container.</description>
    </item>
    
    <item>
      <title>Electron Overview</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/app_dev/electron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/app_dev/electron/</guid>
      <description>Electron Overview Electron is a framework to build cross platform application by using HTML, CSS, Javascript.
 It used V8 runtime engine and Node JS technologies.
  Features    ES2015 - no need for Babel
  Get user&amp;#8217;s geolocation
  Webcam/Microphone access
  P2P applications with WebRTC
  CSS custom properties
  HTML imports
  Desktop &amp;amp; Push notifications
      </description>
    </item>
    
    <item>
      <title>Firebase Database</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/database/firebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/database/firebase/</guid>
      <description>Firebase Database Firebase is a realtime database that syncs the content via server push methodology.
 </description>
    </item>
    
    <item>
      <title>IELTS Listening</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/ielts/listening/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/ielts/listening/</guid>
      <description>&amp;lt; Home Page
   IELTS - Listening Listening Strategies  Read the rubric (titles, instructions, question types) carefully.
  Glance through the questions
  Underline/circle/star key words in the question
  Predict what you might hear,
  Listen carefully if words are spelt for you, as there are different ways of spelling words
  Recognise paraphrases and synonyms as these may be used in the question.</description>
    </item>
    
    <item>
      <title>IELTS Preparation Training</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/ielts/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/ielts/home/</guid>
      <description>IELTS Preparation Training Tips &amp;amp; Tricks by Module  Speaking  Basic strategies for Speaking part 1, 2 &amp;amp; 3
DOs &amp;amp; DON&amp;#8217;Ts
Improvement Tips
Etc&amp;#8230;&amp;#8203;
 Speaking Sample Answer &amp;amp; Analysis  Sample Question &amp;amp; Answer
Answer Analysis
Etc&amp;#8230;&amp;#8203;
 Listening  Listening Strategies
Etc&amp;#8230;&amp;#8203;
 Other English Topics  Grammer
Useful Links
Etc&amp;#8230;&amp;#8203;
     </description>
    </item>
    
    <item>
      <title>IELTS Speaking</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/ielts/speaking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/ielts/speaking/</guid>
      <description>&amp;lt; Home Page
   IELTS - Speaking Basic Strategies  Focus on Fludddency: Don&amp;#8217;t hesitate or stop while you&amp;#8217;re answering. Speak clearly.
  Be Short and Simple: Don&amp;#8217;t give long, detailed answers. Two or three sentences are enough.
  Complete Your Sentences: One-word answers are not enough. Make complete sentences. (e.g. &#34;1 live in Tokyo.&#34; not &#34;Tokyo.&#34;)
  Finish Strong: Say your answer and then end your sentence with confidence.</description>
    </item>
    
    <item>
      <title>IELTS Speaking Sample</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/ielts/speaking-sample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/ielts/speaking-sample/</guid>
      <description>&amp;lt; Home Page
   IELTS - Speaking Part2 Sample Answers and Analysis   Question 1 Descnbe a major decision you have taken in your life.
 You should say:
   What the decision was
  What other choices were available to you
  Why you made the decision you did
   And explain if you think the decision was a good one.</description>
    </item>
    
    <item>
      <title>Ionic</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/app_dev/ionic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/app_dev/ionic/</guid>
      <description>Ionic - Hybrid Apps Setup   Install nodejs
  Update npm
  Install Ionic
npm install -g cordova ionic     Create app
ionic start appName tabs --type=angular     View the app
ionic serve     Install lab
npm i @ionic/lab   ionic lab      this will open slightly a different view with iOS &amp;amp; Andriod screens</description>
    </item>
    
    <item>
      <title>Javascript Resources</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/javascript/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/javascript/resources/</guid>
      <description>Javascript Resources Graphics/Shapes Raphaël is a small JavaScript library that should simplify your work with vector graphics on the web
https://dmitrybaranovskiy.github.io/raphael/
 GoJS is a JavaScript and TypeScript library for building interactive diagrams and graphs.
https://gojs.net/beta/index.html
 oCanvas is a JavaScript library intended to make development with HTML5 Canvas easier.
http://ocanvas.org/
   Best mind map apps Free tools:
https://app.wisemapping.com/c/login
http://freemind.sourceforge.net/wiki/index.php/Main_Page
 Paid tools:
https://bubbl.us/
https://www.xmind.net/zen/
   Mind map building tools/libraries in javascript Create mindmap with GoJS:</description>
    </item>
    
    <item>
      <title>Learning</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/misc/learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/misc/learning/</guid>
      <description>Learning Learning Techniques   Read and understand the concept throughly
  Repetition
  1st Repetition - Right after Learning
  2nd Repetition - After 15-20 minutes
  3rd Repetition - After 6-8 hours
  4th Repetition - After 24 hours
     How to memorize something for a long time
  1st Repetition - Right after learning
  2nd Repetition - After 20-30 minutes</description>
    </item>
    
    <item>
      <title>Other English Topics</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/ielts/others/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/ielts/others/</guid>
      <description>&amp;lt; Home Page
   Other English Topics Grammer 
   Learning Resources   http://learnenglish.britishcouncil.org/
  http://learnenglish.britishcouncil.org/business-english
  https://www.britishcouncil.in/exam
  http://www.bbc.co.uk/learningenglish/
     </description>
    </item>
    
    <item>
      <title>Programming</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/concepts/programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/concepts/programming/</guid>
      <description>Programming Common concepts in any programming language are :
   Declarations
  Data types
  Operators
  Decision Making
  Loops
  Data Structures: Lists, Arrays
  Data Structures: Dictionaries, Sets
  Functions, Procedures
  Objects &amp;amp; Classes
  IO Operation
  Error handling
  Packages
   </description>
    </item>
    
    <item>
      <title>Python Basics</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/python/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/python/basics/</guid>
      <description>Python Basics Python is a general-purpose interpreted, interactive, object-oriented, and high-level programming language.
 It is used for:
   Web development (server-side),
  Software development,
  Machine Learning &amp;amp; Mathematics,
  System scripting.
   Variables Int one = 1 two = 2
 Decimal dem = 1.1
 String strval = &amp;#34;Hello&amp;#34;
     Tip  Variables declared in function are called Local Variable.</description>
    </item>
    
    <item>
      <title>Python Resources</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/python/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/python/resources/</guid>
      <description>Resources Python official documentation:
https://docs.python.org/3/tutorial/
 Python mind map :
http://coodict.github.io/python3-in-one-pic/
https://www.mindmeister.com/752422209/python
 </description>
    </item>
    
    <item>
      <title>Research and Development</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/misc/rnd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/misc/rnd/</guid>
      <description>R&amp;amp;D Stuffs   AMP Project:
https://www.ampproject.org/
   </description>
    </item>
    
    <item>
      <title>Setting up Enlighten Site</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/resources/setup-enlighten/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/resources/setup-enlighten/</guid>
      <description>Setting-up Enlighten Site Prerequisites  Hugo  Statis site generator, written in Go language
 Asciidoctor  AsciiDoc is a human-readable document format, using plain-text mark-up conventions. AsciiDoc documents can be created using any text editor and read &#34;as-is&#34;. Asciidoctor is a fast text processor for converting AsciiDoc content to HTML5/PDF. Hugo supports Markdown and Asciidoc formats. It uses AsciiDoctor to render asciidoc, adoc, ad files via external helper facility.</description>
    </item>
    
    <item>
      <title>Swift Basics</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/swift/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/swift/basics/</guid>
      <description>Swift Basics Swift 4 is a new programming language developed by Apple Inc for iOS and OS X development. Swift 4 adopts the best of C and Objective-C, without the constraints of C compatibility.
   Swift 4 provides Objective-C like syntax.
  Swift 4 provides seamless access to existing Cocoa frameworks.
  Swift 4 unifies the procedural and object-oriented portions of the language.
  Swift 4 does not need a separate library import to support functionalities like input/output or string handling.</description>
    </item>
    
    <item>
      <title>Swift Basics - from Pirple.com</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/swift/basics2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/swift/basics2/</guid>
      <description>Swift Basics - from Pirple.com Variable declaration // 1 var/let name : type = value // 2 var/let name : type name = value // 3 var/let name = value   Primitive types  Int, Int8, Int16, Int32, Int64, UInt, UInt8, UInt16, UInt32, UInt64
Float(32), Double(64), CGFloat(Similar to Float)
Bool
Character
// Valid. length=1 var char1 : Character = &amp;#34;?&amp;#34; // Invalid, length=0  var char2 : Character = &amp;#34;&amp;#34;</description>
    </item>
    
    <item>
      <title>Technology Trends</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/resources/tech-trends/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/resources/tech-trends/</guid>
      <description>Technology Trends I am very passionate about building web &amp;amp; mobile apps. I have list down some of technologies I have cross-across the path.
 Building mobile apps Building mobile apps becoming super easier nowadays.. There are native way of developing apps and there are hybrid way of developing the apps. Below list heads-up the area.
  Build Native Apps    iOS (Swift) - Device specific
  Android (Java, Kotlin) - Device specific</description>
    </item>
    
    <item>
      <title>Useful Links</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/resources/useful-links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/resources/useful-links/</guid>
      <description>Useful Links/Tools Free courses For Javascript, here is a free course:
https://courses.learncodeonline.in/learn/Javascript-for-2018-developer
 Introduction to Algorithms book:
https://amzn.to/2A1B0Ak
   Free Tools/Apps Pick best UI color for your projects:
https://UIColorPicker.com
 Emoji Cheat sheet:
https://www.webpagefx.com/tools/emoji-cheat-sheet/
 Color Scale:
https://hihayk.github.io/scale/
 Color Wheel Generator:
https://hihayk.github.io/wheel/
 Lazyload Images:
https://github.com/Paul-Browne/lazyestload.js
 Extension to record browser interactions:
https://github.com/checkly/puppeteer-recorder
   Dev Tools Discover seven amazing tools for app developers that you have not heard of yet, but should probably be using.</description>
    </item>
    
    <item>
      <title>iOS Basics</title>
      <link>https://coder-selvarajan.github.io/enlighten/docs/swift/ios-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coder-selvarajan.github.io/enlighten/docs/swift/ios-basics/</guid>
      <description>iOS Basics   Create developer account(its free)
  Download xCode
 Simulator  Ctrl + 1 or 2 or 3 - to adjust smiluators size
 Resources  Swift Style guide:
https://github.com/raywenderlich/swift-style-guide
Swift language guide:
https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html
 Swift book by AppCode:
https://www.appcoda.com/learnswift/
       </description>
    </item>
    
  </channel>
</rss>